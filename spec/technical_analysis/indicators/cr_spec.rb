require 'technical-analysis'
require 'spec_helper'

describe 'Indicators' do
  describe "CR" do
    input_data = SpecHelper.get_test_data(:close)

    describe 'Cumulative Return' do
      it 'Calculates CR' do
        output = TechnicalAnalysis::Cr.calculate(input_data, price_key: :close)

        expected_output = [
          {:date=>"2018/10/09", :value=>0.0},
          {:date=>"2018/10/10", :value=>-0.04632608983118081},
          {:date=>"2018/10/11", :value=>-0.054745008154449756},
          {:date=>"2018/10/12", :value=>-0.02098117864856522},
          {:date=>"2018/10/15", :value=>-0.041918279190725924},
          {:date=>"2018/10/16", :value=>-0.02080486622294706},
          {:date=>"2018/10/17", :value=>-0.025036364437783783},
          {:date=>"2018/10/18", :value=>-0.04782474544893549},
          {:date=>"2018/10/19", :value=>-0.03332304844183895},
          {:date=>"2018/10/22", :value=>-0.027416582183629384},
          {:date=>"2018/10/23", :value=>-0.018248336051483294},
          {:date=>"2018/10/24", :value=>-0.05192400934455856},
          {:date=>"2018/10/25", :value=>-0.031163221228016014},
          {:date=>"2018/10/26", :value=>-0.046590558469608113},
          {:date=>"2018/10/29", :value=>-0.06448626966985496},
          {:date=>"2018/10/30", :value=>-0.05981399039097277},
          {:date=>"2018/10/31", :value=>-0.035306563230043594},
          {:date=>"2018/11/01", :value=>-0.020496319478115244},
          {:date=>"2018/11/02", :value=>-0.0854674483184203},
          {:date=>"2018/11/05", :value=>-0.11142945299069952},
          {:date=>"2018/11/06", :value=>-0.10182042579450784},
          {:date=>"2018/11/07", :value=>-0.07458015603649674},
          {:date=>"2018/11/08", :value=>-0.08101555957156079},
          {:date=>"2018/11/09", :value=>-0.09873495834618948},
          {:date=>"2018/11/12", :value=>-0.14413540794287485},
          {:date=>"2018/11/13", :value=>-0.15268656058535732},
          {:date=>"2018/11/14", :value=>-0.17662097236302726},
          {:date=>"2018/11/15", :value=>-0.15630096531053028},
          {:date=>"2018/11/16", :value=>-0.14695640675276592},
          {:date=>"2018/11/19", :value=>-0.18076431436505483},
          {:date=>"2018/11/20", :value=>-0.21990567285229431},
          {:date=>"2018/11/21", :value=>-0.22078723498038524},
          {:date=>"2018/11/23", :value=>-0.24057830475602773},
          {:date=>"2018/11/26", :value=>-0.2303081059637678},
          {:date=>"2018/11/27", :value=>-0.23198307400714063},
          {:date=>"2018/11/28", :value=>-0.20245074271609295},
          {:date=>"2018/11/29", :value=>-0.20857759950632518},
          {:date=>"2018/11/30", :value=>-0.2128531758275664},
          {:date=>"2018/12/03", :value=>-0.185348437431128},
          {:date=>"2018/12/04", :value=>-0.2211839379380262},
          {:date=>"2018/12/06", :value=>-0.22986732489972234},
          {:date=>"2018/12/07", :value=>-0.25732798518975625},
          {:date=>"2018/12/10", :value=>-0.2524353153788514},
          {:date=>"2018/12/11", :value=>-0.2567108917000926},
          {:date=>"2018/12/12", :value=>-0.2546392206990788},
          {:date=>"2018/12/13", :value=>-0.2464847710142373},
          {:date=>"2018/12/14", :value=>-0.2705954952175255},
          {:date=>"2018/12/17", :value=>-0.277383523603826},
          {:date=>"2018/12/18", :value=>-0.2679948869396571},
          {:date=>"2018/12/19", :value=>-0.29082734605721344},
          {:date=>"2018/12/20", :value=>-0.3087230572574602},
          {:date=>"2018/12/21", :value=>-0.3356107021642351},
          {:date=>"2018/12/24", :value=>-0.35280116366200903},
          {:date=>"2018/12/26", :value=>-0.3072244016397056},
          {:date=>"2018/12/27", :value=>-0.3117203684929695},
          {:date=>"2018/12/28", :value=>-0.3113677436417332},
          {:date=>"2018/12/31", :value=>-0.30471194957464626},
          {:date=>"2019/01/02", :value=>-0.30391854365936444},
          {:date=>"2019/01/03", :value=>-0.3732534050337198},
          {:date=>"2019/01/04", :value=>-0.34649799444615864},
          {:date=>"2019/01/07", :value=>-0.34795257195750867},
          {:date=>"2019/01/08", :value=>-0.33552254595142594},
          {:date=>"2019/01/09", :value=>-0.3242385507118614}
        ]

        expect(output).to eq(expected_output)
      end

      it "Throws exception if not enough data" do
        expect {TechnicalAnalysis::Cr.calculate([], price_key: :close)}.to raise_exception(Validation::ValidationError)
      end
    end
  end
end
